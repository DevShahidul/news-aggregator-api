version: "3.7"

services:

    ####################################################################################################
    # app
    ####################################################################################################
    app:
        build:
            args:
                user: developer
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: app
        container_name: app-news-aggregator
        restart: unless-stopped
        ports:
            - "9001:9000"
        environment:
            VIRTUAL_HOST: news-aggregator-dockerize.test
            PHP_IDE_CONFIG: "serverName=Docker"
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ~/.ssh:/root/.ssh
        depends_on:
            - db
            - redis
        networks:
            - laravel

    ####################################################################################################
    # DATABASE (MySQL)
    ####################################################################################################
    db:
        image: mysql:8.0
        container_name: mysql-news-aggregator
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./docker-compose/mysql/data:/var/lib/mysql
            - ./docker-compose/mysql/logs:/var/log/mysql
            - ./docker-compose/mysql/ql:/docker-entrypoint-initdb.d
        networks:
            - laravel
    ####################################################################################################
    # Nginx
    ####################################################################################################
    nginx:
        image: nginx:alpine
        container_name: nginx-news-aggregator
        restart: unless-stopped
        ports:
            - 80:80
            - 8443:443
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d
            - ./docker-compose/nginx/ssl:/etc/nginx/conf.d/ssl
            - ./docker-compose/nginx/phpmyadmin.conf:/etc/nginx/conf.d/phpmyadmin.conf
        networks:
            - laravel

    ####################################################################################################
    # phpMyAdmin
    ####################################################################################################
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        container_name: phpmyadmin-news-aggregator
        ports:
            - 8080:80
        links:
            - db
        restart: unless-stopped
        environment:
            PMA_HOST: db
            #PMA_USER: ${DB_USERNAME}
            #PMA_PASSWORD: ${DB_PASSWORD}
            PMA_PORT: 3306
            PMA_ARBITRARY: 1
        networks:
            - laravel

    ####################################################################################################
    # Redis
    ####################################################################################################
    redis:
        image: "redis:alpine"
        container_name: redis-news-aggregator
        restart: unless-stopped
        volumes:
            - ./docker-compose/redis/data:/data
        ports:
            - "6379:6379"
        networks:
            - laravel

    ####################################################################################################
    # Meilisearch
    ####################################################################################################
    meilisearch:
        image: getmeili/meilisearch:latest
        container_name: meilisearch-news-aggregator
        restart: unless-stopped
        environment:
            - MEILI_MASTER_KEY=${MEILI_MASTER_KEY:-masterKey}
            - MEILI_NO_ANALYTICS=true
            - MEILI_ENV=development
        ports:
            - "7700:7700"
        volumes:
            - meilisearch-data:/meili_data
        networks:
            - laravel

networks:
    laravel:
        driver: bridge

volumes:
    mysql-data:
        driver: local
    redis-data:
        driver: local
    meilisearch-data:
        driver: local
